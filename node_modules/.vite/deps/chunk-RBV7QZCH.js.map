{
  "version": 3,
  "sources": ["../../vuetify/src/composables/resizeObserver.ts"],
  "sourcesContent": ["// Utilities\nimport { onBeforeUnmount, readonly, ref, watch } from 'vue'\nimport { templateRef } from '@/util'\nimport { IN_BROWSER } from '@/util/globals'\n\n// Types\nimport type { DeepReadonly, Ref } from 'vue'\nimport type { TemplateRef } from '@/util'\n\ninterface ResizeState {\n  resizeRef: TemplateRef\n  contentRect: DeepReadonly<Ref<DOMRectReadOnly | undefined>>\n}\n\nexport function useResizeObserver (callback?: ResizeObserverCallback, box: 'content' | 'border' = 'content'): ResizeState {\n  const resizeRef = templateRef()\n  const contentRect = ref<DOMRectReadOnly>()\n\n  if (IN_BROWSER) {\n    const observer = new ResizeObserver((entries: ResizeObserverEntry[]) => {\n      callback?.(entries, observer)\n\n      if (!entries.length) return\n\n      if (box === 'content') {\n        contentRect.value = entries[0].contentRect\n      } else {\n        contentRect.value = entries[0].target.getBoundingClientRect()\n      }\n    })\n\n    onBeforeUnmount(() => {\n      observer.disconnect()\n    })\n\n    watch(() => resizeRef.el, (newValue, oldValue) => {\n      if (oldValue) {\n        observer.unobserve(oldValue)\n        contentRect.value = undefined\n      }\n\n      if (newValue) observer.observe(newValue)\n    }, {\n      flush: 'post',\n    })\n  }\n\n  return {\n    resizeRef,\n    contentRect: readonly(contentRect),\n  }\n}\n"],
  "mappings": ";;;;;;;;;;;;AAcO,SAASA,kBAAmBC,UAAuF;AAAA,MAApDC,MAAyBC,UAAAC,SAAA,KAAAD,UAAA,CAAA,MAAAE,SAAAF,UAAA,CAAA,IAAG;AAChG,QAAMG,YAAYC,YAAY;AAC9B,QAAMC,cAAcC,IAAqB;AAEzC,MAAIC,YAAY;AACd,UAAMC,WAAW,IAAIC,eAAgBC,aAAmC;AACtEZ,2CAAWY,SAASF;AAEpB,UAAI,CAACE,QAAQT,OAAQ;AAErB,UAAIF,QAAQ,WAAW;AACrBM,oBAAYM,QAAQD,QAAQ,CAAC,EAAEL;MACjC,OAAO;AACLA,oBAAYM,QAAQD,QAAQ,CAAC,EAAEE,OAAOC,sBAAsB;MAC9D;IACF,CAAC;AAEDC,oBAAgB,MAAM;AACpBN,eAASO,WAAW;IACtB,CAAC;AAEDC,UAAM,MAAMb,UAAUc,IAAI,CAACC,UAAUC,aAAa;AAChD,UAAIA,UAAU;AACZX,iBAASY,UAAUD,QAAQ;AAC3Bd,oBAAYM,QAAQT;MACtB;AAEA,UAAIgB,SAAUV,UAASa,QAAQH,QAAQ;IACzC,GAAG;MACDI,OAAO;IACT,CAAC;EACH;AAEA,SAAO;IACLnB;IACAE,aAAakB,SAASlB,WAAW;EACnC;AACF;",
  "names": ["useResizeObserver", "callback", "box", "arguments", "length", "undefined", "resizeRef", "templateRef", "contentRect", "ref", "IN_BROWSER", "observer", "ResizeObserver", "entries", "value", "target", "getBoundingClientRect", "onBeforeUnmount", "disconnect", "watch", "el", "newValue", "oldValue", "unobserve", "observe", "flush", "readonly"]
}
